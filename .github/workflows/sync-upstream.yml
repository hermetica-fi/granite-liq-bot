name: Sync Fork with Upstream

on:
  schedule:
    # Run every day at 11:00 AM UTC
    - cron: '0 * * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  sync:
    name: Sync with upstream
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/GraniteProtocol/granite-liq-bot.git || true
          git remote set-url upstream https://github.com/GraniteProtocol/granite-liq-bot.git
      
      - name: Fetch upstream changes
        run: |
          git fetch upstream
          git fetch origin
      
      - name: Check if sync is needed
        id: check_sync
        run: |
          # Get the latest commit hash from upstream main
          UPSTREAM_HASH=$(git rev-parse upstream/main)
          # Get the latest commit hash from origin main
          ORIGIN_HASH=$(git rev-parse origin/main)
          
          echo "Upstream hash: $UPSTREAM_HASH"
          echo "Origin hash: $ORIGIN_HASH"
          
          if [ "$UPSTREAM_HASH" != "$ORIGIN_HASH" ]; then
            echo "sync_needed=true" >> $GITHUB_OUTPUT
            echo "Changes detected in upstream repository"
          else
            echo "sync_needed=false" >> $GITHUB_OUTPUT
            echo "Fork is already up to date"
          fi
      
      - name: Merge upstream changes
        if: steps.check_sync.outputs.sync_needed == 'true'
        run: |
          git checkout main
          git merge upstream/main --no-edit
        continue-on-error: true
      
      - name: Handle merge conflicts
        if: steps.check_sync.outputs.sync_needed == 'true' && failure()
        run: |
          echo "Merge conflicts detected. Creating an issue to notify maintainers."
          echo "MERGE_CONFLICT=true" >> $GITHUB_ENV
      
      - name: Push changes
        if: steps.check_sync.outputs.sync_needed == 'true' && success()
        run: |
          git push origin main
      
      - name: Create issue on merge conflict
        if: env.MERGE_CONFLICT == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'upstream-sync-conflict'
            });
            
            // Only create issue if one doesn't already exist
            if (issues.length === 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'Upstream Sync Conflict Detected',
                body: `## Upstream Sync Conflict
                
                The automated sync with the upstream repository failed due to merge conflicts.
                
                **Action Required:**
                1. Manually resolve the conflicts between your fork and the upstream repository
                2. Close this issue once resolved
                
                **Upstream Repository:** https://github.com/GraniteProtocol/granite-liq-bot.git
                
                This issue was automatically created by the upstream sync workflow.`,
                labels: ['upstream-sync-conflict', 'manual-intervention-required']
              });
            }
      
      - name: Summary
        run: |
          if [ "${{ steps.check_sync.outputs.sync_needed }}" == "true" ]; then
            if [ "${{ env.MERGE_CONFLICT }}" == "true" ]; then
              echo "❌ Sync failed due to merge conflicts. Issue created for manual resolution."
            else
              echo "✅ Successfully synced with upstream repository."
            fi
          else
            echo "ℹ️ Fork is already up to date with upstream."
          fi 
